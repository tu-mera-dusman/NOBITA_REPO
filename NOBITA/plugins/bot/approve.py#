#
# Copyright (C) 2024 by IamDvis@Github, < https://github.com/IamDvis >.
#
# This file is part of < https://github.com/IamDvis/DV-VIBES > project,
# and is released under the MIT License.
# Please see < https://github.com/IamDvis/DV-VIBES/blob/master/LICENSE >
#
# All rights reserved.

from ANWIVIBES import app
from os import environ
from pyrogram import Client, filters
from pyrogram.types import ChatJoinRequest
from pyrogram.types import InlineKeyboardButton, InlineKeyboardMarkup

EVAA = [
    [
        InlineKeyboardButton(text="·¥Ä·¥Ö·¥Ö ·¥ç·¥á  ô·¥Ä ô è", url=f"https://t.me/AnwiVibesBot?startgroup=true"),
    ],
]

# Extract environment variables or provide default values
chat_id_env = environ.get("CHAT_ID")
CHAT_ID = [int(app) for app in chat_id_env.split(",")] if chat_id_env else []

TEXT = environ.get("APPROVED_WELCOME_TEXT", "‚ùñ  ú·¥á ü ü·¥è  ô·¥Ä ô è ‚û• {mention}\n\n‚ùñ ·¥°·¥á ü·¥Ñ·¥è·¥ç·¥á ·¥õ·¥è ‚û• {title}\n\n")
APPROVED = environ.get("APPROVED_WELCOME", "on").lower()

# Define an event handler for chat join requests
@app.on_chat_join_request((filters.group | filters.channel) & filters.chat(CHAT_ID) if CHAT_ID else (filters.group | filters.channel))
async def autoapprove(client: app, message: ChatJoinRequest):
    chat = message.chat  # Chat
    user = message.from_user  # User
    print(f"‡πè {user.first_name} ·¥ä·¥è…™…¥·¥á·¥Ö ü§ù")  # Logs
    await client.approve_chat_join_request(chat_id=chat.id, user_id=user.id)
    if APPROVED == "on":
        await client.send_message(chat_id=chat.id, text=TEXT.format(mention=user.mention, title=chat.title),reply_markup=InlineKeyboardMarkup(EVAA),)
      
